name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: uv sync --dev
      
      - name: Run tests
        run: uv run pytest -v --tb=short
      
      - name: Run linting (non-blocking)
        run: uv run ruff check . || echo "::warning::Linting issues found"
        continue-on-error: true
      
      - name: Check formatting (non-blocking)
        run: uv run ruff format --check || echo "::warning::Formatting issues found"
        continue-on-error: true

  test-server-startup:
    name: Server Startup Test
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: uv sync --dev
      
      - name: Test server startup
        run: |
          timeout 5s uv run python -m md_server --port 9999 || exit_code=$?
          if [ "${exit_code:-0}" -eq 124 ]; then
            echo "✓ Server started successfully (timeout expected)"
            exit 0
          elif [ "${exit_code:-0}" -eq 0 ]; then
            echo "✓ Server started and exited cleanly"
            exit 0
          else
            echo "✗ Server failed to start (exit code: ${exit_code:-0})"
            exit 1
          fi

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: uv sync --dev
      
      - name: Run coverage
        run: uv run pytest --cov=src --cov-report=xml --cov-report=term-missing
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}